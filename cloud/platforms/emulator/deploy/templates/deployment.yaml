apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "deploy.fullname" . }}
  labels:
    {{- include "deploy.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "deploy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "deploy.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "deploy.serviceAccountName" . }}
      {{- if .Values.serviceAccount.create }}
      automountServiceAccountToken: {{ .Values.serviceAccount.automountServiceAccountToken }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          {{- range .Values.service.ports }}
            - name: {{ .name }}
              containerPort: {{ .containerPort }}
              protocol: {{ .protocol }}
          {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe: {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe: {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          env:
          {{- if .Values.app.extraEnvs -}}
          {{ toYaml .Values.app.extraEnvs | nindent 12 }}
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "deploy.fullname" . }}
          volumeMounts:
            - name: kafka-user-certs
              mountPath: /kafka-user-certs/
              readOnly: true
            - name: kafka-cluster-certs
              mountPath: /kafka-cluster-certs/
              readOnly: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: kafka-user-certs
          secret:
            secretName: kafka-user
            items:
              - key: user.crt
                path: ./user.crt
              - key: user.key
                path: ./user.key
        - name: kafka-cluster-certs
          secret:
            secretName: kafka-cluster-cluster-ca-cert
            items:
              - key: ca.crt
                path: ./ca.crt
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
