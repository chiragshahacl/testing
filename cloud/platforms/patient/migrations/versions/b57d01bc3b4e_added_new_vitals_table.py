"""
Added new vitals table
"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

revision = "b57d01bc3b4e"
down_revision = "c61040557314"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "new_vitals",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("event_type", sa.String(), nullable=False),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.Column("patient_primary_identifier", sa.String(), nullable=False),
        sa.Column("device_primary_identifier", sa.String(), nullable=False),
        sa.Column("vital_code", sa.String(), nullable=False),
        sa.Column("device_code", sa.String(), nullable=False),
        sa.Column("unit_code", sa.String(), nullable=False),
        sa.Column("datapoints", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_new_vitals_timestamp"), "new_vitals", ["timestamp"], unique=False)
    op.alter_column("patients", "given_name", existing_type=postgresql.BYTEA(), nullable=False)
    op.alter_column("patients", "family_name", existing_type=postgresql.BYTEA(), nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("patients", "family_name", existing_type=postgresql.BYTEA(), nullable=True)
    op.alter_column("patients", "given_name", existing_type=postgresql.BYTEA(), nullable=True)
    op.drop_index(op.f("ix_new_vitals_timestamp"), table_name="new_vitals")
    op.drop_table("new_vitals")
    # ### end Alembic commands ###
