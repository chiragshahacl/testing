[tool.poetry]
name = "config"
version = "0.1.0"
description = ""
authors = [""]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "3.11.9"
commons = {path = "../../libraries/python/commons", develop = true}
common-schemas = {path = "../../libraries/python/common-schemas", develop = true}
confluent-kafka = "^2.6.0"
healthcheck = {path = "../../libraries/python/healthcheck", develop = true}
cache = {path = "../../libraries/python/cache", develop = true}


[tool.poetry.group.dev.dependencies]
ruff = "^0.7.2"
reformat-gherkin = "^3.0.1"
coverage = "^7.6.4"
pytest = "^8.3.3"
pytest-asyncio = "^0.24.0"
respx = "^0.21.1"
behave = "^1.2.6"
pytest-mock = "^3.14.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]
line-length = 100
src = ["app", "tests"]
lint.ignore = ["F722"]
lint.select = [
    "C4",  # flake8-comprehensions
    "E",   # pycodestyle
    "ERA", # eradicate (removes commented out code)
    "F",   # pyflakes
    "I",   # isort
    "PLC", # pylint
    "SIM", # flake8-simplify
    "TID", # tidy-imports
    "W",   # warnings
]
