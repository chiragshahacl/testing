## SSH access details
# SSH_USER variable defines what is the SSH user to be used for the connection to various components' nodes during the install process
SSH_USER="ubuntu"
# PRIVATE_KEY_NAME variable defines a name of the SSH private key to be used for the connection to various components' nodes during the install process
PRIVATE_KEY_NAME="install.pem"

## Kubernetes cluster details
# LB_K8S_API_FQDN variable defines DNS record for the Kubernetes control-plane Loadbalancer. This is the address to be used for the Kubernetes API access.
LB_K8S_API_FQDN="cp.<domain>"
# K8S_CLUSTER_CONTROL_HOSTS variable defines count of Kubernetes control-plane nodes
K8S_CLUSTER_CONTROL_HOSTS="1"
# K8S_CLUSTER_IPS variable defines IP addresses of the hosts to be used for the Kubernetes cluster. Space delimited.
# K8S_CLUSTER_CONTROL_HOSTS variable from above control how many of the provided IPs would be used as a Kubernetes control-plane.
# e.g, if K8S_CLUSTER_CONTROL_HOSTS is 3 then the first 3 IPs from the list will be used as a Kubernetes control plane
K8S_CLUSTER_IPS="10.0.0.3 10.0.0.4"

## Central Hub details
# LB_INGRESS_IP variable defines IP address of the host to be used as a Load Balancer for the workload running in the cluster.
LB_INGRESS_IP="10.0.0.6"
# LB_INGRESS_DOMAIN variable defines the DNS domain to use for the Central Hub endpoints (e.g., api.${LB_INGRESS_DOMAIN}, web.${LB_INGRESS_DOMAIN})
LB_INGRESS_DOMAIN="<domain>"
# LB_INGRESS_CERT_PUBLIC_KEY variable defines a name of the public key file for the certificate to be used for the Central Hub endpoints
# It should be a full chain of certificates, starting from the leaf certificate and ending with the root CA certificate
LB_INGRESS_CERT_PUBLIC_KEY="public_key.pem"
# LB_INGRESS_CERT_PRIVATE_KEY variable defines a name of the private key file for the certificate to be used for the Central Hub endpoints
LB_INGRESS_CERT_PRIVATE_KEY="private_key.pem"
# SDC_CERT_PASSWORD variable defines a password for the SDC certificate
SDC_CERT_PASSWORD="<certificate-password>"

# Central Hub admin email
ADMIN_EMAIL="<admin-email>"
# Central Hub admin password
ADMIN_PASSWORD="<admin-password>"

# Central Hub technical user email
TECHICAL_USER_MAIL="<technical-user-email>"
# Central Hub technical user password
TECHICAL_USER_PASSWORD="<technical-user-password>"

## Monitoring details
# MONITORING_ENABLED variable defines if monitoring stack should be deployed.
# Possible values: "true" or "false"
# Set to "true" if the monitoring stack should be deployed OR to "false" if the monitoring stack should be skipped
# Monitoring stack includes Prometheus, Grafana, and Loki
MONITORING_ENABLED="true OR false"

## Data disk details
# DATA_DISK_OPERATIONS_ENABLED variable defines if the data disk should be encrypted during the installation process.
# Possible values: "true" or "false"
# This toggle is used to enable or disable the storage related operations.
# If set to "false", the data disk should be mounted to the Kubernetes worker nodes manually.
# Set to "true" if the disk should be encrypted during the installation process OR to "false" if the disk should not be encrypted.
DATA_DISK_OPERATIONS_ENABLED="true OR false"

# DATA_DISK_DEVICE_NAME variable defines the name of the data disk to be used for the Central Hub data storage.
# The disk should be attached to the Kubernetes workers VMs before the installation process.
DATA_DISK_DEVICE_NAME="/dev/<device-name>" # Example: /dev/sdb

# DATA_DISK_MANUAL_ENCRYPTION variable defines if the data disk should be encrypted during the installation process or it has been done manually.
# Possible values: "true" or "false"
# If the DATA disk has some important data already on it, then the encryption should be done manually first to avoid data loss.
# The script to do that is provided in the documentation.
# Set to "true" if the disk is manually encrypted OR to "false" if the disk should be encrypted during the installation process.
DATA_DISK_MANUAL_ENCRYPTION="true OR false"

# DATA_DISK_ENCRYPRTION_KEYFILE variable defines the path to the keyfile to be used for the data disk encryption.
# If the disk already encrypted following the provided documentation, this variable should be set to the path of the keyfile.
# Otherwise, the keyfile will be generated during the installation process and the path should be set to the desired location.
# The path should exists on the node, for example if the variable value is set to "/path/to/keyfile",
# the path "/path/to/" should exist on the node.
DATA_DISK_ENCRYPRTION_KEYFILE="/path/to/keyfile" # Example: /etc/luks-keys/data-disk-keyfile